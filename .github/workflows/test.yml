# Test workflow for the YAML to Markdown Documentation Generator
name: Test Action

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-composite-action:
    name: Test Composite Action
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.repository_owner == 'eps'  # Only run on PRs or in main org
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create test input directory
        run: |
          mkdir -p test-input
          cp samples/filesets.yaml test-input/

      - name: Test Composite Action
        id: test-action
        uses: ./
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY || 'fake-key-for-testing' }}
          yaml_input_path: './test-input'
          output_path: './test-output'
          max_iterations: '2'  # Reduced for testing
          timeout_minutes: '5'  # Reduced for testing
        continue-on-error: true  # Don't fail the workflow if API key is missing

      - name: Verify output structure
        run: |
          echo "üîç Checking test results..."

          if [ -d "./test-output" ]; then
            echo "‚úÖ Output directory created"
            ls -la ./test-output
          else
            echo "‚ùå Output directory not found"
            exit 1
          fi

          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "‚ö†Ô∏è  OPENAI_API_KEY not available - skipping content validation"
            echo "This is expected for forks and pull requests"
          else
            echo "‚úÖ API key available - action should have run successfully"
            echo "Files generated: ${{ steps.test-action.outputs.files_generated }}"
          fi

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-output
          path: ./test-output
          retention-days: 7

  test-python-imports:
    name: Test Python Module Imports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test imports
        run: |
          echo "üêç Testing Python imports..."
          python -c "import sys; sys.path.append('src'); from ai.doc_generator import DocGenerator; print('‚úÖ DocGenerator imports successfully')"
          python -c "import sys; sys.path.append('src'); from doc_generator_main import main; print('‚úÖ Main module imports successfully')"
          python -c "import sys; sys.path.append('src'); from env_vars import EnvVars; print('‚úÖ EnvVars imports successfully')"

      - name: Run unit tests
        run: |
          echo "üß™ Running unit tests..."
          python -m pytest tests/ -v

  validate-action-yaml:
    name: Validate Action YAML
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate action.yml
        run: |
          echo "üìã Validating action.yml structure..."

          # Check required fields exist
          if ! grep -q "name:" action.yml; then
            echo "‚ùå Missing 'name' field in action.yml"
            exit 1
          fi

          if ! grep -q "description:" action.yml; then
            echo "‚ùå Missing 'description' field in action.yml"
            exit 1
          fi

          if ! grep -q "runs:" action.yml; then
            echo "‚ùå Missing 'runs' field in action.yml"
            exit 1
          fi

          echo "‚úÖ action.yml structure is valid"

      - name: Validate workflow YAML
        run: |
          echo "üìã Validating workflow YAML..."

          # Check workflow file exists and has required structure
          if [ ! -f ".github/workflows/action.yml" ]; then
            echo "‚ùå Workflow file not found"
            exit 1
          fi

          if ! grep -q "workflow_call:" .github/workflows/action.yml; then
            echo "‚ùå Missing workflow_call trigger"
            exit 1
          fi

          echo "‚úÖ Workflow YAML structure is valid"

  test-documentation:
    name: Test Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check documentation files
        run: |
          echo "üìö Checking documentation files..."

          required_files=("README.md" "CHANGELOG.md" "RELEASES.md" "action.yml" "samples/filesets.yaml" "samples/productAPI.template.md")

          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "‚úÖ Found: $file"
            else
              echo "‚ùå Missing: $file"
              exit 1
            fi
          done

          echo "‚úÖ All required documentation files present"

      - name: Validate sample files
        run: |
          echo "üîç Validating sample files..."

          # Check if sample YAML is valid
          python -c "import yaml; yaml.safe_load(open('samples/filesets.yaml'))" && echo "‚úÖ filesets.yaml is valid YAML" || echo "‚ùå Invalid YAML in filesets.yaml"

          # Check if template file has placeholders
          if grep -q "{{" samples/productAPI.template.md; then
            echo "‚úÖ Template file contains placeholders"
          else
            echo "‚ùå Template file missing placeholders"
            exit 1
          fi